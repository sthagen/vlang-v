struct TEST {
	a int
	b i64
}

fn static_arrays() {
	a := [8]int{}
	b := [10, 12, 150]!
	c := [TEST{}, TEST{
		b: 10
	}]!
}

fn index_expression() {
	b := [10, 12, 150]!

	a := b[2]
	c := 'hello'[4]
	d := c'hello'[2]
}

fn test_this(index int) int {
	a := 'hello'
	if index < a.len && index >= 0 {
		return a[index]
	}
	return 10
}

struct AA {
	a [10]&int
}

fn main() {
	a := AA{}

	mut b := &int(0)
	b = a.a[2]
}
